
Tutoriel.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000000f4  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800027c  08000284  00010284  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  0800027c  0800027c  0001027c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08000280  08000280  00010280  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  00010284  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .ccmram       00000000  10000000  10000000  00010284  2**0
                  CONTENTS
  7 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
  8 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
  9 .ARM.attributes 0000002a  00000000  00000000  00010284  2**0
                  CONTENTS, READONLY
 10 .debug_line   000000af  00000000  00000000  000102ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_info   00000048  00000000  00000000  0001035d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_abbrev 00000026  00000000  00000000  000103a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_aranges 00000048  00000000  00000000  000103d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str    00000065  00000000  00000000  00010418  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000020  00000000  00000000  00010480  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_frame  0000002c  00000000  00000000  000104a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000264 	.word	0x08000264

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000264 	.word	0x08000264

080001c8 <main>:
 */

.text
.global main

main: mov r1, #15
 80001c8:	210f      	movs	r1, #15
      bx lr
 80001ca:	4770      	bx	lr

080001cc <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 80001cc:	f8df d030 	ldr.w	sp, [pc, #48]	; 8000200 <LoopForever+0x2>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 80001d0:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 80001d2:	e003      	b.n	80001dc <LoopCopyDataInit>

080001d4 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 80001d4:	4b0b      	ldr	r3, [pc, #44]	; (8000204 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 80001d6:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 80001d8:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 80001da:	3104      	adds	r1, #4

080001dc <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 80001dc:	480a      	ldr	r0, [pc, #40]	; (8000208 <LoopForever+0xa>)
	ldr	r3, =_edata
 80001de:	4b0b      	ldr	r3, [pc, #44]	; (800020c <LoopForever+0xe>)
	adds	r2, r0, r1
 80001e0:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 80001e2:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 80001e4:	d3f6      	bcc.n	80001d4 <CopyDataInit>
	ldr	r2, =_sbss
 80001e6:	4a0a      	ldr	r2, [pc, #40]	; (8000210 <LoopForever+0x12>)
	b	LoopFillZerobss
 80001e8:	e002      	b.n	80001f0 <LoopFillZerobss>

080001ea <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 80001ea:	2300      	movs	r3, #0
	str	r3, [r2], #4
 80001ec:	f842 3b04 	str.w	r3, [r2], #4

080001f0 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 80001f0:	4b08      	ldr	r3, [pc, #32]	; (8000214 <LoopForever+0x16>)
	cmp	r2, r3
 80001f2:	429a      	cmp	r2, r3
	bcc	FillZerobss
 80001f4:	d3f9      	bcc.n	80001ea <FillZerobss>

/* Call the clock system intitialization function.*/
/*    bl  SystemInit */
/* Call static constructors */
    bl __libc_init_array
 80001f6:	f000 f811 	bl	800021c <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 80001fa:	f7ff ffe5 	bl	80001c8 <main>

080001fe <LoopForever>:

LoopForever:
    b LoopForever
 80001fe:	e7fe      	b.n	80001fe <LoopForever>
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8000200:	2000a000 	.word	0x2000a000
	ldr	r3, =_sidata
 8000204:	08000284 	.word	0x08000284
	ldr	r0, =_sdata
 8000208:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 800020c:	20000000 	.word	0x20000000
	ldr	r2, =_sbss
 8000210:	20000000 	.word	0x20000000
	ldr	r3, = _ebss
 8000214:	2000001c 	.word	0x2000001c

08000218 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8000218:	e7fe      	b.n	8000218 <ADC1_2_IRQHandler>
	...

0800021c <__libc_init_array>:
 800021c:	b570      	push	{r4, r5, r6, lr}
 800021e:	4d0d      	ldr	r5, [pc, #52]	; (8000254 <__libc_init_array+0x38>)
 8000220:	4c0d      	ldr	r4, [pc, #52]	; (8000258 <__libc_init_array+0x3c>)
 8000222:	1b64      	subs	r4, r4, r5
 8000224:	10a4      	asrs	r4, r4, #2
 8000226:	2600      	movs	r6, #0
 8000228:	42a6      	cmp	r6, r4
 800022a:	d109      	bne.n	8000240 <__libc_init_array+0x24>
 800022c:	4d0b      	ldr	r5, [pc, #44]	; (800025c <__libc_init_array+0x40>)
 800022e:	4c0c      	ldr	r4, [pc, #48]	; (8000260 <__libc_init_array+0x44>)
 8000230:	f000 f818 	bl	8000264 <_init>
 8000234:	1b64      	subs	r4, r4, r5
 8000236:	10a4      	asrs	r4, r4, #2
 8000238:	2600      	movs	r6, #0
 800023a:	42a6      	cmp	r6, r4
 800023c:	d105      	bne.n	800024a <__libc_init_array+0x2e>
 800023e:	bd70      	pop	{r4, r5, r6, pc}
 8000240:	f855 3b04 	ldr.w	r3, [r5], #4
 8000244:	4798      	blx	r3
 8000246:	3601      	adds	r6, #1
 8000248:	e7ee      	b.n	8000228 <__libc_init_array+0xc>
 800024a:	f855 3b04 	ldr.w	r3, [r5], #4
 800024e:	4798      	blx	r3
 8000250:	3601      	adds	r6, #1
 8000252:	e7f2      	b.n	800023a <__libc_init_array+0x1e>
 8000254:	0800027c 	.word	0x0800027c
 8000258:	0800027c 	.word	0x0800027c
 800025c:	0800027c 	.word	0x0800027c
 8000260:	08000280 	.word	0x08000280

08000264 <_init>:
 8000264:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000266:	bf00      	nop
 8000268:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800026a:	bc08      	pop	{r3}
 800026c:	469e      	mov	lr, r3
 800026e:	4770      	bx	lr

08000270 <_fini>:
 8000270:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000272:	bf00      	nop
 8000274:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000276:	bc08      	pop	{r3}
 8000278:	469e      	mov	lr, r3
 800027a:	4770      	bx	lr
